<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11719" started-at="2016-08-11T03:36:42Z" finished-at="2016-08-11T03:36:54Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11719" started-at="2016-08-11T03:36:42Z" finished-at="2016-08-11T03:36:54Z">
      <class name="com.csc.automationtest.LoginTestNG">
        <test-method status="FAIL" signature="setUp()[pri:0, instance:com.csc.automationtest.LoginTestNG@f6efaab]" name="setUp" is-config="true" duration-ms="0" started-at="2016-08-11T10:36:42Z" finished-at="2016-08-11T10:36:42Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: No thread-bound request found: Are you referring to request attributes outside of an actual web request, or processing a request outside of the originally receiving thread? If you are actually operating within a web request and still receive this message, your code is probably running outside of DispatcherServlet/DispatcherPortlet: In this case, use RequestContextListener or RequestContextFilter to expose the current request.
	at org.springframework.web.context.request.RequestContextHolder.currentRequestAttributes(RequestContextHolder.java:131)
	at com.csc.automationtest.LoginTestNG.getBaseUrl(LoginTestNG.java:54)
	at com.csc.automationtest.LoginTestNG.setUp(LoginTestNG.java:28)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="test1()[pri:0, instance:com.csc.automationtest.LoginTestNG@f6efaab]" name="test1" duration-ms="2" started-at="2016-08-11T10:36:53Z" finished-at="2016-08-11T10:36:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.csc.automationtest.LoginTestNG@f6efaab]" name="tearDown" is-config="true" duration-ms="1558" started-at="2016-08-11T10:36:53Z" finished-at="2016-08-11T10:36:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.csc.automationtest.LoginTestNG -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
